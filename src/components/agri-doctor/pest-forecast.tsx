// This is an autogenerated file from Firebase Studio.
"use client";

import { useState, useMemo } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, Bug, ShieldCheck, TreePine, MapPin, Info, ShieldAlert } from 'lucide-react';
import { allPestForecasts, PestForecastData, ProvinceForecast, Pest } from '@/data/pest-forecast-data';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { cn } from '@/lib/utils';

const RiskIcon = ({ riskLevel }: { riskLevel: Pest['riskLevel'] }) => {
    switch (riskLevel) {
        case 'cao':
            return <ShieldAlert className="h-5 w-5 text-red-500 flex-shrink-0" />;
        case 'trung bình':
            return <Bug className="h-5 w-5 text-yellow-500 flex-shrink-0" />;
        case 'thấp':
            return <ShieldCheck className="h-5 w-5 text-green-500 flex-shrink-0" />;
        default:
            return <Bug className="h-5 w-5 text-muted-foreground flex-shrink-0" />;
    }
};

export function PestForecast() {
    const [selectedProvince, setSelectedProvince] = useState<ProvinceForecast | null>(null);
    
    const currentMonth = new Date().getMonth() + 1; // 1-12
    
    const upcomingForecasts = useMemo(() => {
        if (!selectedProvince) return [];
        const forecasts: PestForecastData[] = [];
        for (let i = 0; i < 3; i++) {
            let month = currentMonth + i;
            if (month > 12) month -= 12;
            const forecast = selectedProvince.monthlyForecasts.find(f => f.month === month);
            if (forecast) {
                forecasts.push(forecast);
            }
        }
        return forecasts;
    }, [selectedProvince, currentMonth]);

    const [selectedMonth, setSelectedMonth] = useState<PestForecastData | null>(null);

    const handleProvinceChange = (provinceName: string) => {
        const province = allPestForecasts.find(p => p.provinceName === provinceName) || null;
        setSelectedProvince(province);
        // Automatically select the first upcoming month's forecast if available
        if (province) {
            const firstUpcoming = getUpcomingForecasts(province, currentMonth)[0];
            setSelectedMonth(firstUpcoming || null);
        } else {
            setSelectedMonth(null);
        }
    }

    // Helper function to get upcoming forecasts for a province
    const getUpcomingForecasts = (province: ProvinceForecast, startMonth: number): PestForecastData[] => {
        const forecasts: PestForecastData[] = [];
        for (let i = 0; i < 3; i++) {
            let month = startMonth + i;
            if (month > 12) month -= 12;
            const forecast = province.monthlyForecasts.find(f => f.month === month);
            if (forecast) {
                forecasts.push(forecast);
            }
        }
        return forecasts;
    }

    // Effect to update selected month when upcoming forecasts change
    useMemo(() => {
        if (upcomingForecasts.length > 0) {
            // Check if the currently selected month is still valid
            if (!selectedMonth || !upcomingForecasts.some(f => f.month === selectedMonth.month)) {
                setSelectedMonth(upcomingForecasts[0]);
            }
        } else {
            setSelectedMonth(null);
        }
    }, [upcomingForecasts, selectedMonth]);

    return (
        <section className="space-y-8">
            <div className="text-center space-y-4">
                <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold text-foreground">
                    Lịch dự báo sâu bệnh
                </h2>
                <p className="text-muted-foreground text-sm sm:text-base max-w-3xl mx-auto leading-relaxed">
                    Chọn tỉnh thành của bạn để xem dự báo các loại sâu bệnh hại chính. Chủ động phòng ngừa để bảo vệ mùa màng.
                </p>
            </div>
            
            <Card className="card-ui">
                <CardContent className="p-6 sm:p-8 grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">
                    <div className="lg:col-span-1 space-y-6">
                        <div className="space-y-4">
                            <h3 className="font-bold text-lg sm:text-xl text-foreground flex items-center gap-3">
                                <div className="p-2 bg-secondary rounded-lg">
                                    <MapPin className="h-5 w-5 text-primary" />
                                </div>
                                Chọn khu vực
                            </h3>
                             <Select onValueChange={handleProvinceChange} value={selectedProvince?.provinceName}>
                                <SelectTrigger className="input-ui">
                                    <SelectValue placeholder="Chọn tỉnh thành của bạn" />
                                </SelectTrigger>
                                <SelectContent className="rounded-xl">
                                    {allPestForecasts.map(p => (
                                        <SelectItem key={p.provinceName} value={p.provinceName} className="rounded-lg">
                                            {p.provinceName}
                                        </SelectItem>
                                    ))}
                                </SelectContent>
                            </Select>
                        </div>
                        
                        {selectedProvince && (
                            <div className="space-y-4">
                                <h3 className="font-bold text-lg sm:text-xl text-foreground flex items-center gap-3">
                                    <div className="p-2 bg-secondary rounded-lg">
                                        <Calendar className="h-5 w-5 text-primary" />
                                    </div>
                                    Tháng dự báo
                                </h3>
                                <div className="space-y-3">
                                    {upcomingForecasts.length > 0 ? upcomingForecasts.map((forecast) => (
                                        <button
                                            key={forecast.month}
                                            onClick={() => setSelectedMonth(forecast)}
                                            className={cn(
                                                "w-full text-left p-4 rounded-xl border-2 transition-all duration-300 flex justify-between items-center shadow-sm hover:shadow-md",
                                                selectedMonth?.month === forecast.month
                                                    ? "bg-secondary ring-2 ring-primary border-primary shadow-lg"
                                                    : "hover:bg-muted/50 border-border"
                                            )}
                                        >
                                            <span className="font-semibold text-foreground">{forecast.monthName}</span>
                                            <Badge variant="secondary" className="rounded-lg font-medium">
                                                {forecast.forecasts.length} dự báo
                                            </Badge>
                                        </button>
                                    )) : (
                                        <div className="text-center text-sm text-muted-foreground p-6 border-2 border-dashed border-border rounded-xl bg-muted/30">
                                            Không có dự báo cho các tháng tới.
                                        </div>
                                    )}
                                </div>
                            </div>
                        )}
                    </div>
                    
                    <div className="lg:col-span-2">
                        {selectedMonth && selectedProvince ? (
                             <div className="space-y-6">
                                <div className="text-center sm:text-left">
                                    <h3 className="font-bold text-xl sm:text-2xl text-foreground mb-2">
                                        Chi tiết dự báo cho {selectedMonth.monthName}
                                    </h3>
                                    <p className="text-muted-foreground font-medium">
                                        Tại {selectedProvince.provinceName}
                                    </p>
                                </div>
                                
                                <Accordion type="single" collapsible defaultValue={selectedMonth.forecasts.length > 0 ? selectedMonth.forecasts[0].name : undefined} className="w-full space-y-4">
                                    {selectedMonth.forecasts.map((pest) => (
                                        <AccordionItem value={pest.name} key={pest.name} className="card-ui">
                                            <AccordionTrigger className="px-6 py-4 hover:bg-muted/30 transition-colors">
                                                <div className="flex items-center gap-3 text-left">
                                                    <RiskIcon riskLevel={pest.riskLevel} />
                                                    <span className="font-bold text-foreground">{pest.name}</span>
                                                    <Badge 
                                                        variant={pest.riskLevel === 'cao' ? 'destructive' : pest.riskLevel === 'trung bình' ? 'secondary' : 'default'}
                                                        className="ml-auto rounded-lg font-medium"
                                                    >
                                                        {pest.riskLevel}
                                                    </Badge>
                                                </div>
                                            </AccordionTrigger>
                                            <AccordionContent className="px-6 pb-6 space-y-6">
                                                <p className="text-sm text-foreground/90 leading-relaxed bg-muted/30 p-4 rounded-lg">
                                                    {pest.description}
                                                </p>
                                                
                                                <div className="space-y-4">
                                                    <div className="space-y-3">
                                                        <h4 className="font-bold text-sm text-foreground flex items-center gap-2">
                                                            <div className="p-1.5 bg-secondary rounded-lg">
                                                                <TreePine className="h-4 w-4 text-primary" />
                                                            </div>
                                                            Cây trồng bị ảnh hưởng:
                                                        </h4>
                                                         <div className="flex flex-wrap gap-2">
                                                            {pest.affectedCrops.map((crop, i) => (
                                                                <Badge key={i} variant="outline" className="rounded-lg font-medium border-primary text-primary bg-secondary">
                                                                    {crop}
                                                                </Badge>
                                                            ))}
                                                        </div>
                                                    </div>
                                                    
                                                    <div className="space-y-3">
                                                        <h4 className="font-bold text-sm text-foreground flex items-center gap-2">
                                                            <div className="p-1.5 bg-secondary rounded-lg">
                                                                <ShieldCheck className="h-4 w-4 text-primary" />
                                                            </div>
                                                            Biện pháp phòng ngừa:
                                                        </h4>
                                                        <ul className="list-disc list-inside text-sm text-foreground/90 space-y-2 bg-muted/30 p-4 rounded-lg">
                                                            {pest.prevention.map((p, i) => (
                                                                <li key={i} className="leading-relaxed">{p}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                </div>
                                            </AccordionContent>
                                        </AccordionItem>
                                    ))}
                                </Accordion>
                            </div>
                        ) : (
                            <div className="flex flex-col items-center justify-center h-full bg-muted/30 rounded-xl p-8 text-center min-h-[400px] space-y-6">
                                <div className="flex items-center gap-4 text-muted-foreground">
                                  <div className="p-3 bg-secondary rounded-full">
                                    <MapPin className="h-8 w-8 text-primary"/>
                                  </div>
                                  <div className="p-3 bg-secondary rounded-full">
                                    <Calendar className="h-8 w-8 text-primary"/>
                                  </div>
                                  <div className="p-3 bg-secondary rounded-full">
                                    <Bug className="h-8 w-8 text-primary"/>
                                  </div>
                                </div>
                                <div className="space-y-2">
                                    <p className="font-bold text-xl text-foreground">Bắt đầu bằng cách chọn tỉnh thành</p>
                                    <p className="text-sm text-muted-foreground leading-relaxed">
                                        Chọn một tỉnh từ danh sách để xem chi tiết dự báo sâu bệnh cho khu vực của bạn.
                                    </p>
                                </div>
                            </div>
                        )}
                    </div>
                </CardContent>
            </Card>
            
            <div className="text-center">
                <p className="text-xs text-muted-foreground max-w-2xl mx-auto leading-relaxed">
                    *Dữ liệu dự báo được tổng hợp và phân tích từ các báo cáo của Cục Bảo vệ Thực vật và các nguồn tin nông nghiệp uy tín.
                </p>
            </div>
        </section>
    );
}
